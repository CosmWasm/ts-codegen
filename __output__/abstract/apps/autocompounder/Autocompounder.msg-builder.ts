/**
* This file was automatically generated by @abstract-money/ts-codegen@latest.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @abstract-money/ts-codegen generate command to regenerate this file.
*/

import { Decimal, AssetEntry, BondingPeriodSelector, Duration, InstantiateMsg, ExecuteMsg, Uint128, AnsAsset, QueryMsg, MigrateMsg, Expiration, Timestamp, Uint64, ArrayOfTupleOfStringAndArrayOfClaim, Claim, ArrayOfClaim, Addr, PoolAddressBaseForAddr, AssetInfoBaseForAddr, PoolType, Config, PoolMetadata } from "./Autocompounder.types";
import { CamelCasedProperties } from "type-fest";
export abstract class AutocompounderExecuteMsgBuilder {
  static updateFeeConfig = ({
    deposit,
    performance,
    withdrawal
  }: CamelCasedProperties<Extract<ExecuteMsg, {
    update_fee_config: unknown;
  }>["update_fee_config"]>): ExecuteMsg => {
    return {
      update_fee_config: ({
        deposit,
        performance,
        withdrawal
      } as const)
    };
  };
  static deposit = ({
    funds
  }: CamelCasedProperties<Extract<ExecuteMsg, {
    deposit: unknown;
  }>["deposit"]>): ExecuteMsg => {
    return {
      deposit: ({
        funds
      } as const)
    };
  };
  static withdraw = (): ExecuteMsg => {
    return {
      withdraw: ({} as const)
    };
  };
  static compound = (): ExecuteMsg => {
    return {
      compound: ({} as const)
    };
  };
  static batchUnbond = (): ExecuteMsg => {
    return {
      batch_unbond: ({} as const)
    };
  };
}
export abstract class AutocompounderQueryMsgBuilder {
  static config = (): QueryMsg => {
    return {
      config: ({} as const)
    };
  };
  static pendingClaims = ({
    address
  }: CamelCasedProperties<Extract<QueryMsg, {
    pending_claims: unknown;
  }>["pending_claims"]>): QueryMsg => {
    return {
      pending_claims: ({
        address
      } as const)
    };
  };
  static claims = ({
    address
  }: CamelCasedProperties<Extract<QueryMsg, {
    claims: unknown;
  }>["claims"]>): QueryMsg => {
    return {
      claims: ({
        address
      } as const)
    };
  };
  static allClaims = ({
    limit,
    startAfter
  }: CamelCasedProperties<Extract<QueryMsg, {
    all_claims: unknown;
  }>["all_claims"]>): QueryMsg => {
    return {
      all_claims: ({
        limit,
        start_after: startAfter
      } as const)
    };
  };
  static latestUnbonding = (): QueryMsg => {
    return {
      latest_unbonding: ({} as const)
    };
  };
  static totalLpPosition = (): QueryMsg => {
    return {
      total_lp_position: ({} as const)
    };
  };
  static balance = ({
    address
  }: CamelCasedProperties<Extract<QueryMsg, {
    balance: unknown;
  }>["balance"]>): QueryMsg => {
    return {
      balance: ({
        address
      } as const)
    };
  };
}